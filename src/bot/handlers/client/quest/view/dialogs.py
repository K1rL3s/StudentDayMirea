from aiogram import F
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.kbd import Back, Button, Column, Select
from aiogram_dialog.widgets.text import Const, Format, Multi

from bot.dialogs.buttons import GoToMenuButton
from bot.dialogs.on_actions import on_start_update_dialog_data

from ..getters import get_all_known_quests, get_quest_by_id
from .on_actions import on_answer, on_quest_selected
from .states import ViewQuestsStates

view_quests_window = Window(
    Const("–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∫–∏"),
    Column(
        Select(
            Multi(
                Const("‚úÖ ", when=F["item"][1].status),
                Format("{item[0].title}"),
                sep="",
            ),
            id="quests_select",
            item_id_getter=lambda item: item[0].id,
            items="quests",
            type_factory=str,
            on_click=on_quest_selected,
        ),
    ),
    GoToMenuButton(),
    getter=get_all_known_quests,
    state=ViewQuestsStates.list,
)

view_quest_window = Window(
    Multi(
        Multi(
            Const("‚úÖ ", when=F["status"]),
            Format("<b>{quest.title}</b>"),
            sep="",
        ),
        Format("{quest.description}"),
        Format("<b>–ó–∞–¥–∞–Ω–∏–µ:</b>\n{quest.task}", when=~F["status"]),
        Format("üí° –°–ª–µ–¥—É—é—â–∞—è –∑–∞–ø–∏—Å–∫–∞:\n{quest.end_hint}", when=F["quest"].end_hint),
        sep="\n\n",
    ),
    Button(
        Const("‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –æ—Ç–≤–µ—Ç"),
        id="answer",
        on_click=on_answer,
        when=~F["status"],
    ),
    Back(Const("‚è™ –í—Å–µ –∑–∞–ø–∏—Å–∫–∏")),
    GoToMenuButton(),
    getter=get_quest_by_id,
    state=ViewQuestsStates.one,
)

view_quests_dialog = Dialog(
    view_quests_window,
    view_quest_window,
    on_start=on_start_update_dialog_data,
)
