"""cascade

Revision ID: 0011
Revises: 0010
Create Date: 2025-01-11 09:47:52.812861

"""

from collections.abc import Sequence

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0011"
down_revision: str | None = "0010"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fk_users_to_secrets_user_id_users",
        "users_to_secrets",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_users_to_secrets_secret_id_secrets",
        "users_to_secrets",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_users_to_secrets_user_id_users"),
        "users_to_secrets",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("fk_users_to_secrets_secret_id_secrets"),
        "users_to_secrets",
        "secrets",
        ["secret_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "fk_users_to_tasks_user_id_users",
        "users_to_tasks",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_users_to_tasks_task_id_tasks",
        "users_to_tasks",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_users_to_tasks_task_id_tasks"),
        "users_to_tasks",
        "tasks",
        ["task_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("fk_users_to_tasks_user_id_users"),
        "users_to_tasks",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("fk_users_to_tasks_user_id_users"),
        "users_to_tasks",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_users_to_tasks_task_id_tasks"),
        "users_to_tasks",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_users_to_tasks_task_id_tasks",
        "users_to_tasks",
        "tasks",
        ["task_id"],
        ["id"],
    )
    op.create_foreign_key(
        "fk_users_to_tasks_user_id_users",
        "users_to_tasks",
        "users",
        ["user_id"],
        ["id"],
    )
    op.drop_constraint(
        op.f("fk_users_to_secrets_secret_id_secrets"),
        "users_to_secrets",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_users_to_secrets_user_id_users"),
        "users_to_secrets",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_users_to_secrets_secret_id_secrets",
        "users_to_secrets",
        "secrets",
        ["secret_id"],
        ["id"],
    )
    op.create_foreign_key(
        "fk_users_to_secrets_user_id_users",
        "users_to_secrets",
        "users",
        ["user_id"],
        ["id"],
    )
    # ### end Alembic commands ###
